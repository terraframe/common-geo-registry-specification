swagger: "2.0"
info:
  version: 1.0.0
  title: Common Geo-Registry REST API
  license:
    name: MIT
host: yourdomain
basePath: /v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /geoobject:
    get:
      summary: Returns a GeoObject with the given uid.
      operationId: getGeoObject
      tags:
        - GeoObject
      parameters:
        - name: uid
          in: query
          description: The UID of the GeoObject.
          required: true
          type: string
      responses:
        "200":
          description: A GeoObject in GeoJSON format with the given uid.
          schema:
            $ref: '#/definitions/GeoObject'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a new GeoObject in the Common Geo-Registry.
      operationId: createGeoObject
      tags:
        - GeoObject
      parameters:
        - name: geoObject
          in: body
          description: GeoObject in GeoJSON format of the newly created.
          required: true
          schema:
            $ref: '#/definitions/GeoObject'
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a new GeoObject in the Common Geo-Registry.
      operationId: updateGeoObject
      tags:
        - GeoObject
      parameters:
        - name: geoObject
          in: body
          description: GeoObject in GeoJSON format to be updated.
          required: true
          schema:
            $ref: '#/definitions/GeoObject'
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /childgeoobjects:
    get:
      summary: Get children of the given GeoObject.
      operationId: getChildGeoObjects
      tags:
        - GeoObject
        - Relationship
      parameters:
        - name: parentUid
          in: query
          description: UID of the parent object for which the call fetches children.
          required: true
          type: string
        - name: childrenTypes
          in: query
          description: An array of GeoObjectType names of the types of children GeoObjects to fetch. If blank then return children of all types.
          required: true
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: recursive
          in: query
          description: recursive TRUE if recursive children of the given parent with the given types should be returned, FALSE if only single level children should be returned.
          required: true
          type: string
      responses:
        "200":
          description: A ChildTreeNode object.
          schema:
            $ref: '#/definitions/ChildTreeNode'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /parentgeoobjects:
    get:
      summary: Get parents of the given GeoObject.
      operationId: getParentGeoObjects
      tags:
        - GeoObject
        - Relationship
      parameters:
        - name: childUid
          in: query
          description: UID of the child object for which the call fetches parents.
          required: true
          type: string
        - name: parentTypes
          in: query
          description: An array of GeoObjectType names of the types of parent GeoObjects to fetch. If blank then return parents of all types.
          required: true
          type: array
          collectionFormat: csv
          items:
            type: string
        - name: recursive
          in: query
          description: TRUE if recursive parents of the given parent with the given types should be returned, FALSE if only single level parents should be returned.
          required: true
          type: string
      responses:
        "200":
          description: A ParentTreeNode object.
          schema:
            $ref: '#/definitions/ParentTreeNode'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /geoobjectuids:
    get:
      summary: 	Get list of valid UIDs for use in creating new GeoObjects. The Common Geo-Registry will only accept newly created GeoObjects with a UID that was issued from the Common GeoRegistry.
      operationId: getGeoObjectUids
      tags:
        - GeoObject
        - Metadata
      parameters:
        - name: numberOfUids
          in: query
          description: NumberofUIDs that the Common Geo-Registry will issue to the mobile device.
          required: true
          type: integer
      responses:
        "200":
          description: An array of UIDs.
          schema:
            type: array
            items:
              type: string
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /geoobjecttypes:
    get:
      summary: Return GeoOjectType objects that define the given list of types.
      operationId: getGeoObjectTypes
      tags:
        - GeoObject
        - Metadata
      parameters:
        - name: types
          in: query
          description: An array of GeoObjectType names. If blank then all GeoObjectType objects are returned.
          required: false
          type: array
          items:
            type: string
  
      responses:
        "200":
          description: An array of GeoObjectType objects.
          schema:
            type: array
            items:
              $ref: '#/definitions/GeoObjectType'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
            
definitions:

  ChildTreeNode:
    type: object
    properties:
      geoObject:
        $ref: '#/definitions/GeoObject'
      hierarchyType: 
        type: string
      children:
        type: array
        items:
          $ref: '#/definitions/ChildTreeNode'  # ReDoc UI can't render circular references
          
  ParentTreeNode:
    type: object
    properties:
      geoObject: 
        $ref: '#/definitions/GeoObject'
      hierarchyType:
        type: string
      parents:
        type: array
        description: test
        items:
          $ref: '#/definitions/ParentTreeNode'  # ReDoc UI can't render circular references
    
  GeoObject:
    $ref: "#/definitions/Feature"
    
  GeoObjects:
    type: array
    items:
      $ref: '#/definitions/GeoObject'
      
  GeoObjectType:
    type: object
    properties:
      code:
        type: string
      localizedLabel: 
        type: string
      localizedDescription: 
        type: string
      attributes: 
        type: array
        items:
          $ref: '#/definitions/AttributeType'
    
  AttributeType:
    type: object
    properties:
      code: 
        type: string
      localizedLabel:
        type: string
      type:
        type: string
 
  AttributeTypes:
    type: array
    items:
      $ref: '#/definitions/AttributeType'
  
  Term:
    type: object
    properties:
      code:
        type: string
      localizedLabel:
        type: string
      children:
        type: array
        items:
          $ref: '#/definitions/Term' # ReDoc UI can't render circular references

  Geometry:
    type: object
    description: GeoJSon geometry
    discriminator: type
    required:
      - type
    externalDocs:
      url: http://geojson.org/geojson-spec.html#geometry-objects
    properties:
      type:
        type: string
        enum:
        - Point
        - LineString
        - Polygon
        - MultiPoint
        - MultiLineString
        - MultiPolygon
        description: the geometry type
    
  Point3D:
    type: array
    description: Point in 3D space
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id2
    minItems: 2
    maxItems: 3
    items:
      type: number
          
  Point:
    type: object
    description: GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id2
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            $ref: '#/definitions/Point3D'
            
  LineString:
    type: object
    description: GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id3
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            type: array
            items:
              $ref: '#/definitions/Point3D'

  Polygon:
    type: object
    description: GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id4
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            type: array
            items:
              type: array
              items:
                $ref: '#/definitions/Point3D'

  MultiPoint:
    type: object
    description: GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id5
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            type: array
            items:
              $ref: '#/definitions/Point3D'

  MultiLineString:
    type: object
    description: GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id6
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            type: array
            items:
              type: array
              items:
                $ref: '#/definitions/Point3D'

  MultiPolygon:
    type: object
    description: GeoJSon geometry
    externalDocs:
      url: http://geojson.org/geojson-spec.html#id6
    allOf:
      - $ref: "#/definitions/Geometry"
      - properties:
          coordinates:
            type: array
            items:
              type: array
              items:
                type: array
                items:
                  $ref: '#/definitions/Point3D'

  GeometryCollection:
    type: object
    description: GeoJSon geometry collection
    required:
     - type
     - geometries
    externalDocs:
      url: http://geojson.org/geojson-spec.html#geometrycollection
    properties:
      type:
        type: string
        enum:
        - GeometryCollection
      geometries:
        type: array
        items:
          $ref: '#/definitions/Geometry'

  Feature:
    type: object
    description: GeoJSon Feature
    required:
     - type
     - id
     - geometry
     - properties
    externalDocs:
      url: https://tools.ietf.org/html/rfc7946#section-3.2
    properties:
      type:
        type: string
        enum:
          - Feature
      geometry:
        $ref: '#/definitions/Geometry'
      properties:
        type: object
        required:
          - uid
          - code
          - type
          - status
          - localizedDisplayLabel
        properties:
          uid:
            type: string
          code:
            type: string
          type:
            $ref: '#/definitions/GeoObjectType'
          status:
            $ref: '#/definitions/Term'
          localizedDisplayLabel:
            type: string
             
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
